/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.io.Reader;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author moham
 */
public class XML_View extends JFrame {

    /**
     * Creates new form XML_View
     */
        String xml2string;
	File file;
        File file_C;
	Reader fr;
	//BufferedReader br;
	String correctedxml="";
        String search_word;
        JTextArea textArea = new JTextArea();
	public JTextArea getTextArea() {
		return textArea;
	}
    public XML_View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openFilebtn = new javax.swing.JButton();
        convertJSONbtn = new javax.swing.JButton();
        consistencybtn = new javax.swing.JButton();
        showErrorbtn = new javax.swing.JButton();
        solveErrorbtn = new javax.swing.JButton();
        SearchGraphbtn = new javax.swing.JButton();
        formatbtn = new javax.swing.JButton();
        minifybtn = new javax.swing.JButton();
        compressbtn = new javax.swing.JButton();
        decompressbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        openFilebtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        openFilebtn.setText("Open File");
        openFilebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFilebtnActionPerformed(evt);
            }
        });

        convertJSONbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        convertJSONbtn.setText("Convert to Json");
        convertJSONbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertJSONbtnActionPerformed(evt);
            }
        });

        consistencybtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        consistencybtn.setText("Check Consistency");
        consistencybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consistencybtnActionPerformed(evt);
            }
        });

        showErrorbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        showErrorbtn.setText("Show Errors");
        showErrorbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showErrorbtnActionPerformed(evt);
            }
        });

        solveErrorbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        solveErrorbtn.setText("Correct Errors");
        solveErrorbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveErrorbtnActionPerformed(evt);
            }
        });

        SearchGraphbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        SearchGraphbtn.setText("Search Graph");
        SearchGraphbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchGraphbtnActionPerformed(evt);
            }
        });

        formatbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        formatbtn.setText("Format");
        formatbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatbtnActionPerformed(evt);
            }
        });

        minifybtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        minifybtn.setText("Minify");
        minifybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minifybtnActionPerformed(evt);
            }
        });

        compressbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        compressbtn.setText("Compress");
        compressbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compressbtnActionPerformed(evt);
            }
        });

        decompressbtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        decompressbtn.setText("Decompress");
        decompressbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decompressbtnActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(openFilebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(convertJSONbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(consistencybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showErrorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(solveErrorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchGraphbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formatbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minifybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(compressbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(decompressbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(openFilebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(convertJSONbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(consistencybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showErrorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(solveErrorbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SearchGraphbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(formatbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(minifybtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compressbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(decompressbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchGraphbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchGraphbtnActionPerformed
        // TODO add your handling code here:
        JFrame frmSearchXml = new JFrame();
        JTextField txtSearchBar = new JTextField();
	txtSearchBar.setColumns(10);
	JLabel lblNewLabel = new JLabel("Enter word to be searched:");
	lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 12));
	JButton btnNewButton = new JButton("Search");
	//frmSearchXml.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        JPanel panel = new JPanel();
        panel.setBorder(BorderFactory.createEmptyBorder(30,30,10,30));
        panel.setLayout(new GridLayout(0,1));
        frmSearchXml.add(panel, BorderLayout.CENTER);
        panel.add(txtSearchBar);
	panel.add(lblNewLabel);
	panel.add(btnNewButton);
        frmSearchXml.setTitle("Search XML");
	frmSearchXml.setBounds(100, 100, 300, 186);
	frmSearchXml.setVisible(true);
	btnNewButton.addActionListener(new ActionListener() {
	public void actionPerformed(ActionEvent e) {
            search_word = txtSearchBar.getText();
            Tree xmltree = new Tree();
            xmltree.fillTree(xml2string);
            List<GraphNode> users=GraphConstruction.treeToUsersArray(xmltree.getRoot());
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            PrintStream ps = new PrintStream(baos);
            PrintStream old = System.out;
            System.setOut(ps);
            GraphConstruction.search(users,search_word);
            System.out.flush();
            System.setOut(old);
            String searchOut = baos.toString();
            jTextArea1.setText(searchOut);
        }
        });
        
    }//GEN-LAST:event_SearchGraphbtnActionPerformed

    private void minifybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minifybtnActionPerformed
        // TODO add your handling code here:
        String xml = jTextArea1.getText();
        jTextArea1.setText(Formatting.Minify(xml));
        jLabel1.setText("XML Minified");
    }//GEN-LAST:event_minifybtnActionPerformed

    private void openFilebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFilebtnActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
	chooser.showOpenDialog(chooser);
	chooser.setVisible(true);
	/*****************************************************/
	file = new File(chooser.getSelectedFile().toString());
			      //  Reader fr;
	try {
            fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();
            while(line !=null){
                sb.append(line).append("\n");
                line = br.readLine();
            }
            xml2string = sb.toString();
            jTextArea1.setText(xml2string);
            br.close();
            // fr.close();
            } catch (IOException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
            }
    }//GEN-LAST:event_openFilebtnActionPerformed

    private void convertJSONbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertJSONbtnActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText(null);
	Tree xmltree = new Tree();
	xmltree.fillTree(xml2string);
	/****************************/
	ByteArrayOutputStream baos = new ByteArrayOutputStream();
	PrintStream ps = new PrintStream(baos);
	PrintStream old = System.out;
	System.setOut(ps);
	XMLtoJSON.printJSON(xmltree.getRoot());
	System.out.flush();
	System.setOut(old);
	String json = baos.toString();
	jTextArea1.insert(json,0);
    }//GEN-LAST:event_convertJSONbtnActionPerformed

    private void formatbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatbtnActionPerformed
        // TODO add your handling code here:
        String xml = jTextArea1.getText();
        System.out.println(Formatting.formatXML(xml));
        jTextArea1.setText(Formatting.formatXML(xml));
        jLabel1.setText("XML formatted");
    }//GEN-LAST:event_formatbtnActionPerformed

    private void consistencybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consistencybtnActionPerformed
        // TODO add your handling code here:
        try {
            fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            //BufferedReader br = new BufferedReader(fr);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            PrintStream ps = new PrintStream(baos);
            PrintStream old = System.out;
            System.setOut(ps);
            if(ErrorHandling.consistency(br)){
                System.out.println("The XML File Is Consistent");
            }else {
                System.out.println("The XML File Is Not Consistent");}
            System.out.flush();
            System.setOut(old);
            String consistency = baos.toString();
            jLabel1.setText(consistency);
            br.close();
        } catch (IOException ex) {
           ex.printStackTrace();
        }
        
    }//GEN-LAST:event_consistencybtnActionPerformed

    private void compressbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compressbtnActionPerformed
        // TODO add your handling code here:
        FileWriter fw3;
        Reader fr;
        try {
            fr = new FileReader(file);
            FileReader my_file = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            fw3 = new FileWriter("..\\compress.xml");
            file_C = new File("..\\compress.xml");
            BufferedWriter bw3=new BufferedWriter(fw3);
            jTextArea1.setText(Compression.compress(br,bw3));
        } catch (IOException ex) {
            Logger.getLogger(XML_View.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_compressbtnActionPerformed

    private void decompressbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decompressbtnActionPerformed
        // TODO add your handling code here:
        Reader fr_c;
        try {
            fr_c = new FileReader(file_C);
            BufferedReader br = new BufferedReader(fr_c);
            jTextArea1.setText(Compression.decompress(br));
        } catch (IOException ex) {
            Logger.getLogger(XML_View.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_decompressbtnActionPerformed

    private void showErrorbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showErrorbtnActionPerformed
        // TODO add your handling code here:
        try {
            //  Reader fr;
            fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            PrintStream ps = new PrintStream(baos);
            PrintStream old = System.out;
            System.setOut(ps);
            ErrorHandling.showError(br);
            br.close();
            System.out.flush();
            System.setOut(old);
            String error = baos.toString();
            JFrame showError = new JFrame();
            JPanel panel = new JPanel();
            showError.setBounds(200, 150, 300, 300);
            String[] errors_lines = error.split("\n");
            for(int i = 0 ; i< errors_lines.length ; i++){
                JLabel errors_name = new JLabel();
                errors_name.setBounds(30, 30, 180, 160);
                errors_name.setText(errors_lines[i]);
                panel.add(errors_name);
            }
            panel.setBorder(BorderFactory.createEmptyBorder(30,30,30,30));
            panel.setLayout(new GridLayout(0,1));
            showError.add(panel, BorderLayout.CENTER);
            showError.setTitle("XML Errors");
            showError.setVisible(true);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_showErrorbtnActionPerformed

    private void solveErrorbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveErrorbtnActionPerformed
        // TODO add your handling code here:
        try {
            fr = new FileReader(file);
            FileWriter fw=new FileWriter("..\\new-sample-input.xml");
	    BufferedWriter bw=new BufferedWriter(fw);
            BufferedReader br = new BufferedReader(fr);
            ErrorHandling.solveError(br,bw);
            br.close();
            bw.close();
            FileReader fr2 = new FileReader("..\\new-sample-input.xml");
            BufferedReader br2 = new BufferedReader(fr2);
            StringBuilder sb2 = new StringBuilder();
            String line2 = br2.readLine();
            while(line2 !=null){
                sb2.append(line2).append("\n");
                line2 = br2.readLine();
		// correctedxml +=line2;
            }
            correctedxml = sb2.toString();
            //	System.out.println(correctedxml);
            jTextArea1.setText(null);
            jTextArea1.insert(correctedxml,0);
            jLabel1.setText("The errors are corrected");
            br2.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_solveErrorbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XML_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XML_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XML_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XML_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XML_View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SearchGraphbtn;
    private javax.swing.JButton compressbtn;
    private javax.swing.JButton consistencybtn;
    private javax.swing.JButton convertJSONbtn;
    private javax.swing.JButton decompressbtn;
    private javax.swing.JButton formatbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton minifybtn;
    private javax.swing.JButton openFilebtn;
    private javax.swing.JButton showErrorbtn;
    private javax.swing.JButton solveErrorbtn;
    // End of variables declaration//GEN-END:variables
}
